import{_ as s,c as i,o as a,V as e}from"./chunks/framework.BDcLCbPe.js";const n="/nuxt-3-server-fundamentals/assets/screen59.CES7HIIR.jpg",t="/nuxt-3-server-fundamentals/assets/screen60.UTEe_8Pt.jpg",l="/nuxt-3-server-fundamentals/assets/screen61.Dbu_H4tg.jpg",p="/nuxt-3-server-fundamentals/assets/screen62.BrCEDQl5.jpg",h="/nuxt-3-server-fundamentals/assets/screen63.BG9W1mbh.jpg",r="/nuxt-3-server-fundamentals/assets/screen64.DnTkEOif.jpg",k="/nuxt-3-server-fundamentals/assets/screen65.Dh5MyoFh.jpg",o="/nuxt-3-server-fundamentals/assets/screen66.TCYbVg07.jpg",d="/nuxt-3-server-fundamentals/assets/screen67.Bn-TaJsl.jpg",E="/nuxt-3-server-fundamentals/assets/screen68.C5mzXimT.jpg",f=JSON.parse('{"title":"Complementos del Servidor Nitro","description":"","frontmatter":{},"headers":[],"relativePath":"server-plugins-nitro.md","filePath":"server-plugins-nitro.md"}'),g={name:"server-plugins-nitro.md"},c=e('<h1 id="complementos-del-servidor-nitro" tabindex="-1">Complementos del Servidor Nitro <a class="header-anchor" href="#complementos-del-servidor-nitro" aria-label="Permalink to &quot;Complementos del Servidor Nitro&quot;">‚Äã</a></h1><blockquote><p>Aprenda los conceptos b√°sicos de los complementos de servidor y los ganchos nitro</p></blockquote><p>Ahora que hemos terminado con el middleware del servidor, podemos comenzar a trabajar en los complementos. As√≠ que cerremos la carpeta <code>middleware</code> por ahora.</p><p>Haga clic derecho en la carpeta <code>server</code> y luego cree una nueva carpeta y as√≠gnele el nombre <code>plugins</code>.</p><p>Todo lo que est√© dentro de la carpeta <code>plugins</code> ser√° registrados como complementos de Nitro. Esto nos permite extender el tiempo de ejecuci√≥n de Nitro y conectarnos al ciclo de vida.</p><p><img src="'+n+'" alt="screen12"></p><div class="info custom-block"><p class="custom-block-title">¬øQu√© es Nitro?</p><p>Nitro es un paquete independiente que puedes usar como servidor web y tambi√©n es usado por las personas que est√°n detr√°s de Nuxt. Es un framework de c√≥digo abierto desarrollado en Javascript con TypeScript para construir servidores web ultrarr√°pidos. Puedes usarlo con o sin Nuxt. <a href="https://nitro.unjs.io/" target="_blank" rel="noreferrer">Si quiere aprender m√°s sobre <strong>Nitro</strong>, consulte su sitio web</a>.</p></div><blockquote><p>En Nuxt, cualquier cosa dentro de la carpeta <code>server</code> est√° impulsada por Nitro. Si quieres saber la diferencia entre Nuxt y Nitro, se recomienda el canal de <a href="https://www.youtube.com/channel/UCVJ5qp8Vw8gXQ9RkuNdYWMw" target="_blank" rel="noreferrer">Alexander Leer</a>, busque <a href="https://www.youtube.com/watch?v=DkvgJa-X31k" target="_blank" rel="noreferrer">Nuxt vs. Nitro</a>.</p></blockquote><p>De vuelta al c√≥digo, dentro de la carpeta <code>plugins</code>, cree un nuevo archivo llamado <code>test.ts</code>.</p><p><img src="'+t+`" alt="screen12"></p><p>Luego dentro del archivo, exportemos de manera predeterminada la definici√≥n del complemento Nitro, quien recive un parametro <code>nitroApp</code> y luego hag√°mosle un <code>console.log</code>.</p><p>üìÉ<code>./server/plugins/test.ts</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineNitroPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nitroApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Nitro&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, nitroApp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>La consola registrar√° <code>nitroApp</code>. Entonces, vayamos a la terminal para que pueda ver que genera los ganchos disponibles: la aplicaci√≥n H3, el enrutador y alg√∫n otro como una llamada local, recuperaci√≥n local, error de captura, etc.</p><p><img src="`+l+'" alt="screen12"></p><p>As√≠ que probaremos algunos ejemplos y usaremos un gancho disponible dentro del Nitro. Para hacer eso, simplemente comente el registro de la consola. Usemos el objeto <code>nitroApp</code> seguido de <code>hooks</code>, luego <code>hook</code> sin la &quot;s&quot;. Estos son algunos de los ganchos disponibles dentro del Nitro.</p><p><img src="'+p+`" alt="screen12"></p><p>Esta vez usaremos <code>&#39;render:html&#39;</code>, le pasaremos <code>html</code> con <code>{event}</code>. Y luego, registraremos algo en la consola.</p><p>Tambi√©n agregaremos un contenido dentro del cuerpo para que se muestre en el momento en que se renderiza el HTML.</p><p>El <code>h1</code>, ser√° nuestra etiqueta con el contenido <code>I am from nitro</code>.</p><p>üìÉ<code>./server/plugins/test.ts</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineNitroPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nitroApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // console.log(&#39;Nitro&#39;, nitroApp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  nitroApp.hooks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;render:html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;HTML Rendered.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    html.bodyAppend.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;h1&gt;I am from nitro.&lt;/h1&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Probemos eso dentro de la terminal. Pero antes, deshabilitemos el error que arrojamos, asegur√°ndonos de no arrojar ning√∫n error.</p><p>üìÉ<code>./server/middleware/log.ts</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineEventHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> authorization</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getRequestHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;authorization&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (authorization) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.context.authorized </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // throw createError({statusCode:401, statusMessage: &#39;Unauthorized&#39;})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRequestURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event).pathname.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">includes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/api/test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Correct endpoint&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    setHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;authorization&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;my-custom-authorization-value&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Luego en la terminal, reinicie la aplicaci√≥n y observar√° que se registra en la c√≥nsola <code>HTML Rendered.</code>.</p><p><img src="`+h+'" alt="screen12"></p><p>Luego abra el navegador y si lo actualiza, deber√≠a mostrar la siguiente bienvenida,</p><p><img src="'+r+`" alt="screen12"></p><p>Si te desplazas hacia abajo como puedes ver, dice <code>I am from nitro.</code>, que fue el contenido que creamos.</p><p>Por ahora, comentemos temporalmente la siguiente bienvenida y guarde.</p><p>üìÉ<code>./app.vue</code></p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!--NuxtWelcome /--&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>Luego, como puede ver, sale el <code>I am from nitro.</code> con mas claridad.</p><p><img src="`+k+'" alt="screen12"></p><p>Inspeccione eso y eso est√° dentro del cuerpo y tiene una etiqueta <code>h1</code>.</p><p><img src="'+o+`" alt="screen12"></p><p>As√≠ que si desea manipular el renderizado HTML, puedes usar el gancho <code>render:html</code>.</p><hr><p>Ahora que sabemos c√≥mo manipular el HTML renderizado usando el gancho Nitro. Esta vez rastrearemos el agente de usuario.</p><p>As√≠ que nuevamente el mismo proceso con el gancho <code>nitroApp.hooks.hook</code>, pero esta vez en lugar de renderizar HTML ser√° renderizar la respuesta. Le pasamos el evento y simplemente una c√≥nsola que registra el evento para que podamos ver qu√© hay dentro del evento.</p><p>üìÉ<code>./server/plugins/test.ts</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineNitroPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nitroApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // console.log(&#39;Nitro&#39;, nitroApp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  nitroApp.hooks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;render:html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // console.log(&#39;HTML Rendered.&#39;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    html.bodyAppend.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;h1&gt;I am from nitro.&lt;/h1&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  nitroApp.hooks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;render:response&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event)</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>De vuelta en la terminal, actualice y como puede ver, tenemos aqu√≠ el evento disponible.</p><p><img src="`+d+`" alt="screen12"></p><p>Hay un objeto <code>node</code> con las propiedades <code>req</code> y <code>res</code>. Si baja un poco, tambi√©n est√° el m√©todo de contexto web.</p><p>De vuelta al c√≥digo, dejemos el registro de la consola con el evento.</p><p>Ahora registremos espec√≠ficamente el agente de usuario de los encabezados de la petici√≥n del nodo.</p><p>üìÉ<code>./server/plugins/test.ts</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineNitroPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nitroApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // console.log(&#39;Nitro&#39;, nitroApp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  nitroApp.hooks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;render:html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // console.log(&#39;HTML Rendered.&#39;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    html.bodyAppend.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;h1&gt;I am from nitro.&lt;/h1&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  nitroApp.hooks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;render:response&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event.node.req.headers[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user-agent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Actualice nuevamente el navegador y abra la terminal</p><p><img src="`+E+`" alt="screen12"></p><p>Como puede ver, sale el agente de usuario.</p><hr><p>Ahora que sabemos c√≥mo usar los ganchos b√°sicos de Nitro, esta vez haremos un ejemplo para los usuarios de <code>mongoDB</code>.</p><p>Por ejemplo, desea conectar su base de datos <code>mongoDB</code> en su aplicaci√≥n Nuxt. Para poder hacer esto, ser√° algo como esto.</p><p>Primero importamos <code>mongoose</code>, pero tenga en cuenta que debe tener previamente instalado este paquete para que no le cause un error.</p><p>Luego dentro de la definici√≥n del complemento de Nitro, usaremos el gancho de conecci√≥n de <code>mongoose</code>, al cual le pasaremos la configuraci√≥n <code>MONGO_URI</code> en tiempo de ejecuci√≥n. Por lo que debe configurarlo dentro del <code>runtimeConfig</code> de la definici√≥n de configuraci√≥n de Nuxt.</p><p>Despu√©s de eso, simplemente registremos en la consola para verificar si la conexi√≥n <code>mongoDB</code> es exitosa.</p><p>üìÉ<code>./server/plugins/test.ts</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mongoose </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mongoose&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineNitroPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nitroApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // console.log(&#39;Nitro&#39;, nitroApp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  nitroApp.hooks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;render:html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // console.log(&#39;HTML Rendered.&#39;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    html.bodyAppend.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;h1&gt;I am from nitro.&lt;/h1&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  nitroApp.hooks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;render:response&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event.node.req.headers[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user-agent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mongoose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">useRuntimeConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MONGO_URI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Connected to mongoDB.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Si el registro de la consola no aparece, eso significa que hay un problema con tu conexi√≥n.</p><hr><p>Bien, eso es todo por el tema de complementos del servidor y espero que aprendas algo en este tutorial.</p><p>Entonces, <a href="https://nitro.unjs.io/guide/plugins" target="_blank" rel="noreferrer">si quieres aprender m√°s sobre complementos en Nitro, puedes ir a su sitio web</a>.</p><p>Consulte tambien aqui para mas informacion.</p><ul><li><a href="https://nuxt.com/docs/guide/going-further/hooks" target="_blank" rel="noreferrer">https://nuxt.com/docs/guide/going-further/hooks</a></li><li><a href="https://nuxt.com/docs/guide/going-further/hooks#server-hooks-runtime" target="_blank" rel="noreferrer">https://nuxt.com/docs/guide/going-further/hooks#server-hooks-runtime</a></li><li><a href="https://nuxt.com/docs/api/advanced/hooks#nitro-app-hooks-runtime-server-side" target="_blank" rel="noreferrer">https://nuxt.com/docs/api/advanced/hooks#nitro-app-hooks-runtime-server-side</a></li></ul><p>41:34</p>`,68),y=[c];function u(m,F,v,A,b,C){return a(),i("div",null,y)}const D=s(g,[["render",u]]);export{f as __pageData,D as default};
