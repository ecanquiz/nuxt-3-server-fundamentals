import{_ as s,c as i,o as a,V as e}from"./chunks/framework.BDcLCbPe.js";const t="/nuxt-3-server-fundamentals/assets/screen59.CES7HIIR.jpg",n="/nuxt-3-server-fundamentals/assets/screen60.UTEe_8Pt.jpg",h="/nuxt-3-server-fundamentals/assets/screen61.Dbu_H4tg.jpg",p="/nuxt-3-server-fundamentals/assets/screen62.BrCEDQl5.jpg",l="/nuxt-3-server-fundamentals/assets/screen63.BG9W1mbh.jpg",k="/nuxt-3-server-fundamentals/assets/screen64.DnTkEOif.jpg",o="/nuxt-3-server-fundamentals/assets/screen65.Dh5MyoFh.jpg",r="/nuxt-3-server-fundamentals/assets/screen66.TCYbVg07.jpg",d="/nuxt-3-server-fundamentals/assets/screen67.Bn-TaJsl.jpg",E="/nuxt-3-server-fundamentals/assets/screen68.C5mzXimT.jpg",C=JSON.parse('{"title":"Complementos del Servidor Nitro","description":"","frontmatter":{},"headers":[],"relativePath":"server-plugins-nitro.md","filePath":"server-plugins-nitro.md"}'),g={name:"server-plugins-nitro.md"},y=e('<h1 id="complementos-del-servidor-nitro" tabindex="-1">Complementos del Servidor Nitro <a class="header-anchor" href="#complementos-del-servidor-nitro" aria-label="Permalink to &quot;Complementos del Servidor Nitro&quot;">â€‹</a></h1><p><img src="'+t+'" alt="screen12"></p><p><a href="https://nitro.unjs.io/" target="_blank" rel="noreferrer">https://nitro.unjs.io/</a></p><p><img src="'+n+`" alt="screen12"></p><p>ðŸ“ƒ<code>./server/plugins/test.ts</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineNitroPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nitroApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Nitro&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, nitroApp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p><img src="`+h+'" alt="screen12"></p><p><img src="'+p+`" alt="screen12"></p><p>ðŸ“ƒ<code>./server/plugins/test.ts</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineNitroPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nitroApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // console.log(&#39;Nitro&#39;, nitroApp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  nitroApp.hooks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;render:html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;HTML Rendered.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    html.bodyAppend.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;h1&gt;I am from nitro.&lt;/h1&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>ðŸ“ƒ<code>./server/middleware/log.ts</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineEventHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> authorization</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getRequestHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;authorization&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (authorization) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    event.context.authorized </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // throw createError({statusCode:401, statusMessage: &#39;Unauthorized&#39;})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRequestURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event).pathname.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">includes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/api/test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Correct endpoint&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    setHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;authorization&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;my-custom-authorization-value&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p><img src="`+l+'" alt="screen12"></p><p><img src="'+k+`" alt="screen12"></p><p>ðŸ“ƒ<code>./app.vue</code></p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!--NuxtWelcome /--&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><img src="`+o+'" alt="screen12"></p><p><img src="'+r+`" alt="screen12"></p><p>ðŸ“ƒ<code>./server/plugins/test.ts</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineNitroPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nitroApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // console.log(&#39;Nitro&#39;, nitroApp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  nitroApp.hooks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;render:html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // console.log(&#39;HTML Rendered.&#39;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    html.bodyAppend.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;h1&gt;I am from nitro.&lt;/h1&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  nitroApp.hooks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;render:response&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p><img src="`+d+`" alt="screen12"></p><p>ðŸ“ƒ<code>./server/plugins/test.ts</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineNitroPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nitroApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // console.log(&#39;Nitro&#39;, nitroApp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  nitroApp.hooks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;render:html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // console.log(&#39;HTML Rendered.&#39;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    html.bodyAppend.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;h1&gt;I am from nitro.&lt;/h1&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  nitroApp.hooks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;render:response&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event.node.req.headers[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user-agent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p><img src="`+E+`" alt="screen12"></p><p>ðŸ“ƒ<code>./server/plugins/test.ts</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mongoose </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mongoose&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineNitroPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nitroApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // console.log(&#39;Nitro&#39;, nitroApp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  nitroApp.hooks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;render:html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // console.log(&#39;HTML Rendered.&#39;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    html.bodyAppend.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;h1&gt;I am from nitro.&lt;/h1&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  nitroApp.hooks.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;render:response&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event.node.req.headers[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user-agent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mongoose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">useRuntimeConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MONGO_URI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Connected to mongoDB.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p><a href="https://nitro.unjs.io/guide/plugins" target="_blank" rel="noreferrer">https://nitro.unjs.io/guide/plugins</a></p><p><a href="https://nuxt.com/docs/guide/going-further/hooks" target="_blank" rel="noreferrer">https://nuxt.com/docs/guide/going-further/hooks</a><a href="https://nuxt.com/docs/guide/going-further/hooks#server-hooks-runtime" target="_blank" rel="noreferrer">https://nuxt.com/docs/guide/going-further/hooks#server-hooks-runtime</a><a href="https://nuxt.com/docs/api/advanced/hooks#nitro-app-hooks-runtime-server-side" target="_blank" rel="noreferrer">https://nuxt.com/docs/api/advanced/hooks#nitro-app-hooks-runtime-server-side</a></p><p>41:41</p><p>Learn the basics of server plugins and nitro hooks</p><p>okay all right now that we are finished with uh server middleware we can start working on the uh plugins okay so to do</p><p>that um right click on the server folder and then then create a new folder and name it plugins okay so let&#39;s close the</p><p>um midle whe folder for now and then here in the plugins folder so anything inside the plugins folder will be</p><p>registered as nitro plugins okay so this allows us extending Nitros runtime and</p><p>for hooking into life cycle hook okay so you might be wondering what is um Nitro</p><p>so Nitro is a standalone package that you can use as web server and the people</p><p>behind it are also the people behind KNX okay so it is a open source typescript</p><p>framework to build Ultra fast web servers and it is open to anyone so in case or um if you want if you don&#39;t want</p><p>to use KNX and you um want to use Nitro as your web server you can use that okay</p><p>so just a quick side note here so anything inside the um server folder it&#39;s all powered by um Nitro okay so if</p><p>you want to learn more about um Nitro they have a website and um it&#39;s here okay so this is their</p><p>um website and they have a guide here and also if you want to um know the</p><p>difference between KNX and Nitro I recommend um Alexander Leer&#39;s channel search the um KNX versus Nitro okay so</p><p>back in the VSS code here in the plugins create a new file and that will be um test.ts for now</p><p>okay and then inside the file um let&#39;s do export d default and then</p><p>Define Nitro plugin okay and it will be a Nitro app okay and then let&#39;s just</p><p>console log the Nitro app for now okay so Nitro and then Nitro app all right so</p><p>let&#39;s go to the terminal so as you can see it outputs the um available Hooks</p><p>and then the H3 app and then the router and then some other um like a local call</p><p>local fetch capture error okay so let&#39;s try some examples and we&#39;ll be using a</p><p>hook inside the uh available inside the Nitro okay so to do that uh let&#39;s just</p><p>remove the console log and then um Nitro app so that&#39;s the Nitro app here so</p><p>Nitro app and Then followed by Hooks and then hook okay without the S and then</p><p>the um hook here okay so these are the available hooks inside the Nitro okay so</p><p>this time we will be um using the render HTML and then HTML okay and then event</p><p>all right just like that and then let&#39;s just um conso log the</p><p>um HTML rendered okay so and also we will</p><p>be adding a a Content inside the inside the body so the moment it it uh renders</p><p>the HTML let&#39;s add a a a content in the body okay so to do that it will be like</p><p>this so HTML so that&#39;s the HTML here okay so HTML and then a pen body and</p><p>then push okay so here um let&#39;s just say an H1 okay so that&#39;s our um HTML tag</p><p>there and then the content so I am from</p><p>plugin okay or let&#39;s say I am from Nitro all right just like that so let&#39;s test</p><p>that so inside the uh terminal here let&#39;s just um actually let&#39;s uh disable</p><p>the um error here that we that we throw so we&#39;re making sure that we&#39;re not throwing any errors okay so disable that</p><p>and then back in the um test plugin and then the terminal and then let&#39;s just um</p><p>terminate the for now and then run again okay and then let&#39;s open the um see as</p><p>you can see it here it says 401 and authorized so that&#39;s the um uh the</p><p>middle way here okay so now that we uh disable that and then if we</p><p>refresh okay it should display the um next welcome okay and then back in the</p><p>vs code and as you can see it renders the um the console log here in the um in</p><p>the plugin okay so that&#39;s this one and then if we go back to the browser and if</p><p>you scroll down as you can see um it says here I am from Nitro so that&#39;s the</p><p>um content that we create that we created here okay so let&#39;s just um close</p><p>this one and then let&#39;s temporarily remove the next welcome for now and then save that and then as you can see it</p><p>outputs the um I am from Nitro so inspect that and that is inside the body and it has</p><p>an H1 tag okay so if you want to manipulate manipulate the um rendered</p><p>HTML you can use this hook okay all right now that we know how to uh</p><p>manipulate the rendered HTML using the um Nitro hook um this time we will track</p><p>the um the user agent okay so to do that okay so Nitro app hooks so the same</p><p>process and this time instead of rendering HTML it will be uh render</p><p>response okay so here response and then</p><p>the event okay just like that so let&#39;s just</p><p>um console log the event for now so we can see what&#39;s inside the event okay so</p><p>back in the terminal and then let&#39;s just clear that and then</p><p>refresh and then back in The View vs code and as you can see we have here the</p><p>available um event okay so there&#39;s a u node Rec and then</p><p>rest and then there&#39;s also web context method and everything here okay so let&#39;s</p><p>just close that and then let&#39;s just um or actually let&#39;s just leave the or</p><p>let&#39;s just remove the console log okay to do that use the event and then it will be inside the node and then wreck</p><p>okay and then headers okay and then the um user agent</p><p>okay so let&#39;s just um put that inside the console log so console log user</p><p>agent okay so let&#39;s open the terminal again and then let&#39;s clear that okay so</p><p>and then refresh and as you can see it outputs</p><p>the um user head user um agent okay all right now that we know how to</p><p>use the basic um hooks or Nitro hooks this time um this is for the mongod DB</p><p>users so for example you want to connect your mongod DB in your KNX app so you</p><p>can do this so if you&#39;re going to use mongus so it will be something like this</p><p>so import so you&#39;re going to import the mongus so</p><p>mongus from mongus okay but um this um in this example it&#39;s</p><p>going to cause an error because um I don&#39;t have the mongus package installed but it&#39;s something like this and then</p><p>inside the um Define n plugin it&#39;s uh something like this so mongus and then</p><p>connect and then it will be um inside it it will be the um use runtime config and</p><p>then your URI okay so you need to configure that inside the uh um next</p><p>config okay so after that U let&#39;s just console log here so we&#39;re checking if um</p><p>the mongod DB connection is um successful so connected</p><p>to I miss spell the connected so connected to</p><p>DP okay so it&#39;s something like this okay that&#39;s pretty easy and if this</p><p>console log won&#39;t show up that means uh there&#39;s a problem with your connection all</p><p>right all right so that&#39;s it for the server plugins topic and I hope you learn something in this um tutorial okay</p><p>so if you want to learn more about Nitro um you can just um go to their website and here in the guides as you can see um</p><p>there are um examples here and there&#39;s also capturing errors okay and then um</p><p>the hook ones okay so here&#39;s the request and then the after response okay so if</p><p>you want to manipulate the before the response you can use before response okay and if you also want to manipulate</p><p>after response you can use the after response hook all right and also here in</p><p>the um next website so just go to the get started or actually</p><p>guide and then um going further all right and then the lifecycle hooks okay</p><p>so scroll down and then the server hooks and then click the U learn more about</p><p>available Nitro life cycle hooks okay so click that and these are the available</p><p>um life cycle hooks okay so hook name and then the arguments and then the description all</p><p>41:34</p>`,121),u=[y];function c(m,F,v,f,b,A){return a(),i("div",null,u)}const B=s(g,[["render",c]]);export{C as __pageData,B as default};
