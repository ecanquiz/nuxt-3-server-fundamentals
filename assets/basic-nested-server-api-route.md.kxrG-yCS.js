import{_ as s,c as a,o as e,V as i}from"./chunks/framework.BDcLCbPe.js";const n="/nuxt-3-server-fundamentals/assets/screen20.e6lbtVra.jpg",t="/nuxt-3-server-fundamentals/assets/screen21.DldpQk71.jpg",p="/nuxt-3-server-fundamentals/assets/screen22.yYwz4xbP.jpg",l="/nuxt-3-server-fundamentals/assets/screen23.CYCzGqIW.jpg",r="/nuxt-3-server-fundamentals/assets/screen24.DLTrapMX.jpg",h="/nuxt-3-server-fundamentals/assets/screen25.BZkg6HBx.jpg",o="/nuxt-3-server-fundamentals/assets/screen26.Cs867QhM.jpg",d="/nuxt-3-server-fundamentals/assets/screen27.Cg5M9RUd.jpg",B=JSON.parse('{"title":"Ruta Anidada B√°sica de la API del Servidor","description":"","frontmatter":{},"headers":[],"relativePath":"basic-nested-server-api-route.md","filePath":"basic-nested-server-api-route.md"}'),k={name:"basic-nested-server-api-route.md"},c=i('<h1 id="ruta-anidada-basica-de-la-api-del-servidor" tabindex="-1">Ruta Anidada B√°sica de la API del Servidor <a class="header-anchor" href="#ruta-anidada-basica-de-la-api-del-servidor" aria-label="Permalink to &quot;Ruta Anidada B√°sica de la API del Servidor&quot;">‚Äã</a></h1><h2 id="aprenda-a-crear-una-ruta-api-anidada" tabindex="-1">Aprenda a crear una ruta API anidada <a class="header-anchor" href="#aprenda-a-crear-una-ruta-api-anidada" aria-label="Permalink to &quot;Aprenda a crear una ruta API anidada&quot;">‚Äã</a></h2><blockquote><p>Ahora que sabemos c√≥mo crear una <a href="./basic-dynamic-server-api-route.html">ruta API din√°mica simple</a>, contin√∫e con la ruta anidada.</p></blockquote><p>En la carpeta <code>server/</code> y luego dentro de la carpeta <code>api/</code>, creemos una nueva carpeta que vamos a necesitar, llam√©mosla <code>nested/</code>, pero puede nombrarla como desee.</p><p><img src="'+n+'" alt="screen12"></p><p>Entonces, dentro de la carpeta <code>nested/</code>, crearemos un archivo abriendo y cerrando corchete e introduciendo tres puntos as√≠ <code>[...]</code> dentro de ellos y luego la extensi√≥n del archivo que es <code>.ts</code>.</p><p><img src="'+t+`" alt="screen12"></p><h2 id="punto-final-con-metodo-get" tabindex="-1">Punto final con m√©todo <code>get</code> <a class="header-anchor" href="#punto-final-con-metodo-get" aria-label="Permalink to &quot;Punto final con m√©todo \`get\`&quot;">‚Äã</a></h2><p>Luego aqu√≠ creemos un <code>router</code> con <code>createRouter</code>. Entonces llamaremos al <code>router</code> seguido del m√©todo <em>HTTP</em>, por lo que en nuestro ejemplo aqu√≠ es <code>get</code>. Pasaremos como primer par√°metro <code>&#39;/test&#39;</code> y como segundo par√°metro la funci√≥n <code>defineEventHandler</code> con su correspondiente <code>event</code> como parametro y simplemente retornaremos <code>&#39;Get nested route.&#39;</code>. Finalmente exportemos por defecto <code>useBase()</code> pasando <code>&#39;/api/nested&#39;</code> como primer par√°metro y luego el segundo par√°metro ser√° <code>router.handler</code>.</p><p>üìÉ<code>./server/api/nested/[...].ts</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> router</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createRouter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineEventHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Get nested route.&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useBase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/api/nested&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, router.handler)</span></span></code></pre></div><p>As√≠ que guardemos el archivo y luego probaremos en Postman con la ruta <code>/api/nested/test</code> y esto regresar√° <code>Get nested route.</code>. Aseg√∫rese de antes haber seleccionado el m√©todo <strong><em>GET</em></strong> en Postman para probar este punto final.</p><p><img src="`+p+`" alt="screen12"></p><h2 id="punto-final-con-metodo-post" tabindex="-1">Punto final con m√©todo <code>post</code> <a class="header-anchor" href="#punto-final-con-metodo-post" aria-label="Permalink to &quot;Punto final con m√©todo \`post\`&quot;">‚Äã</a></h2><p>Si quiere crear un m√©todo <code>post</code>, aqu√≠ por ejemplo. Entonces, creamos el <code>router.post</code>, digamos que usamos el mismo punto final de API, as√≠ que ser√° <code>/test</code> luego el <code>defineEventHandler</code> con su correspondiente <code>event</code> como parametro y simplemente retornaremos <code>&#39;Post nested route.&#39;</code></p><p>üìÉ<code>./server/api/nested/[...].ts</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> router</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createRouter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineEventHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Get nested route.&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineEventHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Post nested route.&#39;</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useBase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/api/nested&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, router.handler)</span></span></code></pre></div><p>As√≠ que guardemos el archivo y de vuelta a Postman con la misma ruta <code>&quot;/api/nested/test&quot;</code> pero ahora seleccionando el m√©todo <code>POST</code>, ahora esto regresar√° <code>Post nested route.</code>.</p><p><img src="`+l+`" alt="screen12"></p><h2 id="puntos-finales-con-metodos-put-patch-y-delete" tabindex="-1">Puntos finales con m√©todos <code>put</code>, <code>patch</code> y <code>delete</code> <a class="header-anchor" href="#puntos-finales-con-metodos-put-patch-y-delete" aria-label="Permalink to &quot;Puntos finales con m√©todos \`put\`, \`patch\` y \`delete\`&quot;">‚Äã</a></h2><blockquote><p>Lo mismo para <code>PUT</code>, <code>PATCH</code> y <code>DELETE</code>, as√≠ que veamos eso en acci√≥n.</p></blockquote><p>Copiemos uno de estos puntos y luego cambi√©moslo para poner <code>put</code>, <code>patch</code> y <code>delete</code> respectivamente. Tambi√©n cambiemos el texto.</p><p>üìÉ<code>./server/api/nested/[...].ts</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> router</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createRouter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// omitted for brevity ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineEventHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Put nested route.&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">patch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineEventHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Patch nested route.&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineEventHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Delete nested route.&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useBase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/api/nested&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, router.handler)</span></span></code></pre></div><p>Volvamos a Postman para probar uno a uno, empecemos con <code>PUT</code>.</p><p><img src="`+r+'" alt="screen12"></p><p>Luego probemos con <code>PATCH</code>.</p><p><img src="'+h+'" alt="screen12"></p><p>Finalmente el <code>DELETE</code>.</p><p><img src="'+o+`" alt="screen12"></p><h2 id="agregar-otra-ruta" tabindex="-1">Agregar otra ruta <a class="header-anchor" href="#agregar-otra-ruta" aria-label="Permalink to &quot;Agregar otra ruta&quot;">‚Äã</a></h2><p>Si desea agregar otra ruta despu√©s, agreguemos aqu√≠ otro <code>router</code> y luego otro m√©todo HTTP, por ejemplo <code>get</code>, que ser√° la ruta anidada <code>/api/nested/test/category</code>. Con su <code>defineEventHandler</code>, su correspondiente <code>event</code> como parametro y simplemente retornaremos <code>&#39;Category.&#39;</code></p><p>üìÉ<code>./server/api/nested/[...].ts</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> router</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createRouter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// omitted for brevity ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/test/category&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineEventHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Category.&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useBase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/api/nested&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, router.handler)</span></span></code></pre></div><p>Luego de vuelta a Postman, seleccionamos en este caso el m√©todo <code>GET</code>, y luego enviamos eso y generar√° <code>&#39;Category.&#39;</code>.</p><p><img src="`+d+'" alt="screen12"></p><p>Lo mismo cosa cuando agregas otro punto final dentro o al lado de <code>api/test/category</code>, el mismo proceso. As√≠ es como se crea un anidado b√°sico de Rutas API del servidor.</p>',37),E=[c];function g(u,y,m,F,v,C){return e(),a("div",null,E)}const f=s(k,[["render",g]]);export{B as __pageData,f as default};
